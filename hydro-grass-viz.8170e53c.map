{"version":3,"sources":["images/simwe/data_file.js","node_modules/@esri/arcgis-to-geojson-utils/index.js","index.js"],"names":["layerInfos","title","file","bounds","opacity","pointsEqual","a","b","i","length","closeRing","coordinates","push","ringIsClockwise","ringToTest","total","pt2","rLength","pt1","vertexIntersectsVertex","a1","a2","b1","b2","uaT","ubT","uB","ua","ub","arrayIntersectsArray","j","coordinatesContainPoint","point","contains","l","coordinatesContainCoordinates","outer","inner","intersects","convertRingsToGeoJSON","rings","outerRings","x","hole","holes","r","ring","slice","polygon","reverse","uncontainedHoles","pop","contained","type","orientRings","poly","output","outerRing","shift","flattenMultiPolygonRings","shallowClone","obj","target","hasOwnProperty","getId","attributes","idAttribute","keys","key","Error","arcgisToGeoJSON","arcgis","geojson","features","y","z","points","paths","xmin","ymin","xmax","ymax","geometry","properties","id","err","JSON","stringify","spatialReference","wkid","console","warn","geojsonToArcGIS","result","geometries","mapboxgl","accessToken","map","Map","container","zoom","center","pitch","style","hash","addControl","NavigationControl","grassBbox","on","setScaleForLevel","scale","setScale","flyToStore","currentFeature","flyTo","what_spatial_scales_does_this_p","createPopUp","popUps","document","getElementsByClassName","remove","Popup","closeOnClick","setLngLat","setHTML","why_is_this_location_a_problem","how_challenging_is_this_problem","what_is_the_greatest_barrier_to","what_actions_can_be_taken_to_fi","addTo","Element","prototype","parentNode","removeChild","frameCount","currentImage","floodingImages","flood_0_5","flood_1_0","flood_1_5","flood_2_0","flood_2_5","flood_3_0","flood_3_5","flood_4_0","flood_4_5","flood_5_0","buildLevelList","data","levels","prop","listing","getElementById","appendChild","createElement","className","link","href","dataPosition","innerHTML","addEventListener","e","clickedListing","activeItem","classList","add","details","phone","phoneFormatted","addSource","url","addLayer","forEach","element","log","importedDischarge","fetch","cache","then","res","json","selectedFeatureIndex","queryRenderedFeatures","layers","clickedPoint","selectedFeature","ObjectId","getSource","labelLayerId","getStyle","layout"],"mappings":"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","file":"hydro-grass-viz.8170e53c.map","sourceRoot":"..","sourcesContent":["/* This file was generated by r.out.leaflet GRASS GIS module. */\n\nvar layerInfos = [\n   {title: \"D03_37_20171201_20160228_disch.120\", file: \"D03_37_20171201_20160228_disch.120.png\", bounds: [[35.74142458, -78.61239861], [35.75521359, -78.62931361]], opacity: 1.0}\n,   {title: \"D03_37_20079201_20160228_disch.120\", file: \"D03_37_20079201_20160228_disch.120.png\", bounds: [[35.74162043, -78.67980703], [35.75540014, -78.69671067]], opacity: 1.0}\n,   {title: \"D03_37_20170101_20160228_disch.120\", file: \"D03_37_20170101_20160228_disch.120.png\", bounds: [[35.71405388, -78.64622289], [35.72783834, -78.66312646]], opacity: 1.0}\n,   {title: \"D03_37_20171301_20160228_disch.120\", file: \"D03_37_20171301_20160228_disch.120.png\", bounds: [[35.76889760, -78.61226696], [35.78268650, -78.62918773]], opacity: 1.0}\n,   {title: \"D03_37_20079301_20160228_disch.120\", file: \"D03_37_20079301_20160228_disch.120.png\", bounds: [[35.76909351, -78.67969828], [35.78287312, -78.69660768]], opacity: 1.0}\n,   {title: \"D03_37_20172203_20160228_disch.120\", file: \"D03_37_20172203_20160228_disch.120.png\", bounds: [[35.72757609, -78.57876604], [35.74136979, -78.59568383]], opacity: 1.0}\n,   {title: \"D03_37_20079101_20160228_disch.120\", file: \"D03_37_20079101_20160228_disch.120.png\", bounds: [[35.71414711, -78.67991570], [35.72792693, -78.69681359]], opacity: 1.0}\n,   {title: \"D03_37_20171101_20160228_disch.120\", file: \"D03_37_20171101_20160228_disch.120.png\", bounds: [[35.71395133, -78.61253016], [35.72774044, -78.62943940]], opacity: 1.0}\n,   {title: \"D03_37_20170301_20160228_disch.120\", file: \"D03_37_20170301_20160228_disch.120.png\", bounds: [[35.76900022, -78.64598258], [35.78278447, -78.66289767]], opacity: 1.0}\n,   {title: \"D03_37_20172403_20160228_disch.120\", file: \"D03_37_20172403_20160228_disch.120.png\", bounds: [[35.78252204, -78.57847985], [35.79631554, -78.59540919]], opacity: 1.0}\n,   {title: \"D03_37_20170201_20160228_disch.120\", file: \"D03_37_20170201_20160228_disch.120.png\", bounds: [[35.74152717, -78.64610278], [35.75531153, -78.66301210]], opacity: 1.0}\n];\n\nexport default layerInfos;","/*\n * Copyright 2017 Esri\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n// checks if 2 x,y points are equal\nfunction pointsEqual (a, b) {\n  for (var i = 0; i < a.length; i++) {\n    if (a[i] !== b[i]) {\n      return false;\n    }\n  }\n  return true;\n}\n\n// checks if the first and last points of a ring are equal and closes the ring\nfunction closeRing (coordinates) {\n  if (!pointsEqual(coordinates[0], coordinates[coordinates.length - 1])) {\n    coordinates.push(coordinates[0]);\n  }\n  return coordinates;\n}\n\n// determine if polygon ring coordinates are clockwise. clockwise signifies outer ring, counter-clockwise an inner ring\n// or hole. this logic was found at http://stackoverflow.com/questions/1165647/how-to-determine-if-a-list-of-polygon-\n// points-are-in-clockwise-order\nfunction ringIsClockwise (ringToTest) {\n  var total = 0;\n  var i = 0;\n  var rLength = ringToTest.length;\n  var pt1 = ringToTest[i];\n  var pt2;\n  for (i; i < rLength - 1; i++) {\n    pt2 = ringToTest[i + 1];\n    total += (pt2[0] - pt1[0]) * (pt2[1] + pt1[1]);\n    pt1 = pt2;\n  }\n  return (total >= 0);\n}\n\n// ported from terraformer.js https://github.com/Esri/Terraformer/blob/master/terraformer.js#L504-L519\nfunction vertexIntersectsVertex (a1, a2, b1, b2) {\n  var uaT = ((b2[0] - b1[0]) * (a1[1] - b1[1])) - ((b2[1] - b1[1]) * (a1[0] - b1[0]));\n  var ubT = ((a2[0] - a1[0]) * (a1[1] - b1[1])) - ((a2[1] - a1[1]) * (a1[0] - b1[0]));\n  var uB = ((b2[1] - b1[1]) * (a2[0] - a1[0])) - ((b2[0] - b1[0]) * (a2[1] - a1[1]));\n\n  if (uB !== 0) {\n    var ua = uaT / uB;\n    var ub = ubT / uB;\n\n    if (ua >= 0 && ua <= 1 && ub >= 0 && ub <= 1) {\n      return true;\n    }\n  }\n\n  return false;\n}\n\n// ported from terraformer.js https://github.com/Esri/Terraformer/blob/master/terraformer.js#L521-L531\nfunction arrayIntersectsArray (a, b) {\n  for (var i = 0; i < a.length - 1; i++) {\n    for (var j = 0; j < b.length - 1; j++) {\n      if (vertexIntersectsVertex(a[i], a[i + 1], b[j], b[j + 1])) {\n        return true;\n      }\n    }\n  }\n\n  return false;\n}\n\n// ported from terraformer.js https://github.com/Esri/Terraformer/blob/master/terraformer.js#L470-L480\nfunction coordinatesContainPoint (coordinates, point) {\n  var contains = false;\n  for (var i = -1, l = coordinates.length, j = l - 1; ++i < l; j = i) {\n    if (((coordinates[i][1] <= point[1] && point[1] < coordinates[j][1]) ||\n         (coordinates[j][1] <= point[1] && point[1] < coordinates[i][1])) &&\n        (point[0] < (((coordinates[j][0] - coordinates[i][0]) * (point[1] - coordinates[i][1])) / (coordinates[j][1] - coordinates[i][1])) + coordinates[i][0])) {\n      contains = !contains;\n    }\n  }\n  return contains;\n}\n\n// ported from terraformer-arcgis-parser.js https://github.com/Esri/terraformer-arcgis-parser/blob/master/terraformer-arcgis-parser.js#L106-L113\nfunction coordinatesContainCoordinates (outer, inner) {\n  var intersects = arrayIntersectsArray(outer, inner);\n  var contains = coordinatesContainPoint(outer, inner[0]);\n  if (!intersects && contains) {\n    return true;\n  }\n  return false;\n}\n\n// do any polygons in this array contain any other polygons in this array?\n// used for checking for holes in arcgis rings\n// ported from terraformer-arcgis-parser.js https://github.com/Esri/terraformer-arcgis-parser/blob/master/terraformer-arcgis-parser.js#L117-L172\nfunction convertRingsToGeoJSON (rings) {\n  var outerRings = [];\n  var holes = [];\n  var x; // iterator\n  var outerRing; // current outer ring being evaluated\n  var hole; // current hole being evaluated\n\n  // for each ring\n  for (var r = 0; r < rings.length; r++) {\n    var ring = closeRing(rings[r].slice(0));\n    if (ring.length < 4) {\n      continue;\n    }\n    // is this ring an outer ring? is it clockwise?\n    if (ringIsClockwise(ring)) {\n      var polygon = [ ring.slice().reverse() ]; // wind outer rings counterclockwise for RFC 7946 compliance\n      outerRings.push(polygon); // push to outer rings\n    } else {\n      holes.push(ring.slice().reverse()); // wind inner rings clockwise for RFC 7946 compliance\n    }\n  }\n\n  var uncontainedHoles = [];\n\n  // while there are holes left...\n  while (holes.length) {\n    // pop a hole off out stack\n    hole = holes.pop();\n\n    // loop over all outer rings and see if they contain our hole.\n    var contained = false;\n    for (x = outerRings.length - 1; x >= 0; x--) {\n      outerRing = outerRings[x][0];\n      if (coordinatesContainCoordinates(outerRing, hole)) {\n        // the hole is contained push it into our polygon\n        outerRings[x].push(hole);\n        contained = true;\n        break;\n      }\n    }\n\n    // ring is not contained in any outer ring\n    // sometimes this happens https://github.com/Esri/esri-leaflet/issues/320\n    if (!contained) {\n      uncontainedHoles.push(hole);\n    }\n  }\n\n  // if we couldn't match any holes using contains we can try intersects...\n  while (uncontainedHoles.length) {\n    // pop a hole off out stack\n    hole = uncontainedHoles.pop();\n\n    // loop over all outer rings and see if any intersect our hole.\n    var intersects = false;\n\n    for (x = outerRings.length - 1; x >= 0; x--) {\n      outerRing = outerRings[x][0];\n      if (arrayIntersectsArray(outerRing, hole)) {\n        // the hole is contained push it into our polygon\n        outerRings[x].push(hole);\n        intersects = true;\n        break;\n      }\n    }\n\n    if (!intersects) {\n      outerRings.push([hole.reverse()]);\n    }\n  }\n\n  if (outerRings.length === 1) {\n    return {\n      type: 'Polygon',\n      coordinates: outerRings[0]\n    };\n  } else {\n    return {\n      type: 'MultiPolygon',\n      coordinates: outerRings\n    };\n  }\n}\n\n// This function ensures that rings are oriented in the right directions\n// outer rings are clockwise, holes are counterclockwise\n// used for converting GeoJSON Polygons to ArcGIS Polygons\nfunction orientRings (poly) {\n  var output = [];\n  var polygon = poly.slice(0);\n  var outerRing = closeRing(polygon.shift().slice(0));\n  if (outerRing.length >= 4) {\n    if (!ringIsClockwise(outerRing)) {\n      outerRing.reverse();\n    }\n\n    output.push(outerRing);\n\n    for (var i = 0; i < polygon.length; i++) {\n      var hole = closeRing(polygon[i].slice(0));\n      if (hole.length >= 4) {\n        if (ringIsClockwise(hole)) {\n          hole.reverse();\n        }\n        output.push(hole);\n      }\n    }\n  }\n\n  return output;\n}\n\n// This function flattens holes in multipolygons to one array of polygons\n// used for converting GeoJSON Polygons to ArcGIS Polygons\nfunction flattenMultiPolygonRings (rings) {\n  var output = [];\n  for (var i = 0; i < rings.length; i++) {\n    var polygon = orientRings(rings[i]);\n    for (var x = polygon.length - 1; x >= 0; x--) {\n      var ring = polygon[x].slice(0);\n      output.push(ring);\n    }\n  }\n  return output;\n}\n\n// shallow object clone for feature properties and attributes\n// from http://jsperf.com/cloning-an-object/2\nfunction shallowClone (obj) {\n  var target = {};\n  for (var i in obj) {\n    if (obj.hasOwnProperty(i)) {\n      target[i] = obj[i];\n    }\n  }\n  return target;\n}\n\nfunction getId (attributes, idAttribute) {\n  var keys = idAttribute ? [idAttribute, 'OBJECTID', 'FID'] : ['OBJECTID', 'FID'];\n  for (var i = 0; i < keys.length; i++) {\n    var key = keys[i];\n    if (\n      key in attributes &&\n      (typeof attributes[key] === 'string' ||\n        typeof attributes[key] === 'number')\n    ) {\n      return attributes[key];\n    }\n  }\n  throw Error('No valid id attribute found');\n}\n\nexport function arcgisToGeoJSON (arcgis, idAttribute) {\n  var geojson = {};\n\n  if (arcgis.features) {\n    geojson.type = 'FeatureCollection';\n    geojson.features = [];\n    for (var i = 0; i < arcgis.features.length; i++) {\n      geojson.features.push(arcgisToGeoJSON(arcgis.features[i], idAttribute));\n    }\n  }\n\n  if (typeof arcgis.x === 'number' && typeof arcgis.y === 'number') {\n    geojson.type = 'Point';\n    geojson.coordinates = [arcgis.x, arcgis.y];\n    if (typeof arcgis.z === 'number') {\n      geojson.coordinates.push(arcgis.z);\n    }\n  }\n\n  if (arcgis.points) {\n    geojson.type = 'MultiPoint';\n    geojson.coordinates = arcgis.points.slice(0);\n  }\n\n  if (arcgis.paths) {\n    if (arcgis.paths.length === 1) {\n      geojson.type = 'LineString';\n      geojson.coordinates = arcgis.paths[0].slice(0);\n    } else {\n      geojson.type = 'MultiLineString';\n      geojson.coordinates = arcgis.paths.slice(0);\n    }\n  }\n\n  if (arcgis.rings) {\n    geojson = convertRingsToGeoJSON(arcgis.rings.slice(0));\n  }\n\n  if (\n    typeof arcgis.xmin === 'number' &&\n    typeof arcgis.ymin === 'number' &&\n    typeof arcgis.xmax === 'number' &&\n    typeof arcgis.ymax === 'number'\n  ) {\n    geojson.type = 'Polygon';\n    geojson.coordinates = [[\n      [arcgis.xmax, arcgis.ymax],\n      [arcgis.xmin, arcgis.ymax],\n      [arcgis.xmin, arcgis.ymin],\n      [arcgis.xmax, arcgis.ymin],\n      [arcgis.xmax, arcgis.ymax]\n    ]];\n  }\n\n  if (arcgis.geometry || arcgis.attributes) {\n    geojson.type = 'Feature';\n    geojson.geometry = (arcgis.geometry) ? arcgisToGeoJSON(arcgis.geometry) : null;\n    geojson.properties = (arcgis.attributes) ? shallowClone(arcgis.attributes) : null;\n    if (arcgis.attributes) {\n      try {\n        geojson.id = getId(arcgis.attributes, idAttribute);\n      } catch (err) {\n        // don't set an id\n      }\n    }\n  }\n\n  // if no valid geometry was encountered\n  if (JSON.stringify(geojson.geometry) === JSON.stringify({})) {\n    geojson.geometry = null;\n  }\n\n  if (\n    arcgis.spatialReference &&\n    arcgis.spatialReference.wkid &&\n    arcgis.spatialReference.wkid !== 4326\n  ) {\n    console.warn('Object converted in non-standard crs - ' + JSON.stringify(arcgis.spatialReference));\n  }\n\n  return geojson;\n}\n\nexport function geojsonToArcGIS (geojson, idAttribute) {\n  idAttribute = idAttribute || 'OBJECTID';\n  var spatialReference = { wkid: 4326 };\n  var result = {};\n  var i;\n\n  switch (geojson.type) {\n    case 'Point':\n      result.x = geojson.coordinates[0];\n      result.y = geojson.coordinates[1];\n      result.spatialReference = spatialReference;\n      break;\n    case 'MultiPoint':\n      result.points = geojson.coordinates.slice(0);\n      result.spatialReference = spatialReference;\n      break;\n    case 'LineString':\n      result.paths = [geojson.coordinates.slice(0)];\n      result.spatialReference = spatialReference;\n      break;\n    case 'MultiLineString':\n      result.paths = geojson.coordinates.slice(0);\n      result.spatialReference = spatialReference;\n      break;\n    case 'Polygon':\n      result.rings = orientRings(geojson.coordinates.slice(0));\n      result.spatialReference = spatialReference;\n      break;\n    case 'MultiPolygon':\n      result.rings = flattenMultiPolygonRings(geojson.coordinates.slice(0));\n      result.spatialReference = spatialReference;\n      break;\n    case 'Feature':\n      if (geojson.geometry) {\n        result.geometry = geojsonToArcGIS(geojson.geometry, idAttribute);\n      }\n      result.attributes = (geojson.properties) ? shallowClone(geojson.properties) : {};\n      if (geojson.id) {\n        result.attributes[idAttribute] = geojson.id;\n      }\n      break;\n    case 'FeatureCollection':\n      result = [];\n      for (i = 0; i < geojson.features.length; i++) {\n        result.push(geojsonToArcGIS(geojson.features[i], idAttribute));\n      }\n      break;\n    case 'GeometryCollection':\n      result = [];\n      for (i = 0; i < geojson.geometries.length; i++) {\n        result.push(geojsonToArcGIS(geojson.geometries[i], idAttribute));\n      }\n      break;\n  }\n\n  return result;\n}\n\nexport default { arcgisToGeoJSON: arcgisToGeoJSON, geojsonToArcGIS: geojsonToArcGIS };\n","import flood_0_5 from './images/inundation_0.5.png';\nimport flood_1_0 from './images/inundation_1.0.png';\nimport flood_1_5 from './images/inundation_1.5.png';\nimport flood_2_0 from './images/inundation_2.0.png';\nimport flood_2_5 from './images/inundation_2.5.png';\nimport flood_3_0 from './images/inundation_3.0.png';\nimport flood_3_5 from './images/inundation_3.5.png';\nimport flood_4_0 from './images/inundation_4.0.png';\nimport flood_4_5 from './images/inundation_4.5.png';\nimport flood_5_0 from './images/inundation_5.0.png';\nimport simwe from './images/simwe/data_file';\nimport importedDischarge from './images/simwe/*.png';\n\n// import React, {Component} from 'react';\n// import {render} from 'react-dom';\n// import {StaticMap} from 'react-map-gl';\n// import DeckGL, {ScreenGridLayer} from 'deck.gl';\n// import {isWebGL2} from 'luma.gl';\nimport { arcgisToGeoJSON } from '@esri/arcgis-to-geojson-utils';\n\n\n\nmapboxgl.accessToken = process.env.MapboxAccessToken;\nconst map = new mapboxgl.Map({\n    container: 'map',\n    zoom: 12,\n    center: [-78.6319,35.7099],\n    pitch: 45,\n    style: 'mapbox://styles/ctwhite/cjtnhxudz2j4l1fs74h5hygce',\n    hash: true\n}).addControl(new mapboxgl.NavigationControl());\n\n//Convert Bounds to match mapbox gl source specs\nfunction grassBbox(bounds) {\n    return [\n        [bounds[1][1], bounds[1][0]],\n        [bounds[0][1], bounds[1][0]],\n        [bounds[0][1], bounds[0][0]],           \n        [bounds[1][1], bounds[0][0]]\n    ];\n}\n\nmap.on('load', () => {\n\n    function setScaleForLevel(scale) {\n        let setScale = 15;\n        switch (scale) {\n            case 'Household':\n                setScale = 17;\n                break;\n            case 'Neighborhood':\n                setScale = 15;\n                break;\n            case 'City':\n                setScale = 12;\n                break;\n            case 'Region':\n                setScale = 10;\n                break;\n            default:\n                setScale = 15;\n        }\n        return setScale;\n    }\n\n    function flyToStore(currentFeature) {\n        map.flyTo({\n          center: currentFeature.geometry.coordinates,\n          zoom: setScaleForLevel(currentFeature.properties.what_spatial_scales_does_this_p)\n        });\n      }\n      \n      function createPopUp(currentFeature) {\n        var popUps = document.getElementsByClassName('mapboxgl-popup');\n        // Check if there is already a popup on the map and if so, remove it\n        if (popUps[0]) popUps[0].remove();\n      \n        var popup = new mapboxgl.Popup({ closeOnClick: true })\n          .setLngLat(currentFeature.geometry.coordinates)\n          .setHTML(`<h3>${currentFeature.properties.why_is_this_location_a_problem}</h3>` +\n            '<h4><strong>Difficulty: </strong>' + currentFeature.properties.how_challenging_is_this_problem + '</h4>' +\n            '<h4><strong>Challenge: </strong>' + currentFeature.properties.why_is_this_location_a_problem + '</h4>' +\n            '<h4><strong>Obstacle: </strong>' + currentFeature.properties.what_is_the_greatest_barrier_to + '</h4>' +\n            '<h4><strong>Supplies: </strong>' + currentFeature.properties.what_actions_can_be_taken_to_fi + '</h4>' +\n            '<h4>Get Started!</h4>'\n            )\n          .addTo(map);\n      }\n\n      // This will let you use the .remove() function later on\n        if (!('remove' in Element.prototype)) {\n            Element.prototype.remove = function() {\n            if (this.parentNode) {\n                this.parentNode.removeChild(this);\n            }\n            };\n        }\n\n    // //Discharge GIF\n    // var currentDischargeImage = 0;\n    // var dischargeImages = [discharge020, discharge040, discharge060, discharge080, discharge100, discharge120];\n    // function getDischargePath() {\n    //     return dischargeImages[currentDischargeImage];\n    // }\n    \n \n    //Flooding GIF\n    var frameCount = 10;\n    var currentImage = 9;\n    var floodingImages = [flood_0_5, flood_1_0, flood_1_5, flood_2_0, flood_2_5, flood_3_0, flood_3_5, flood_4_0, flood_4_5, flood_5_0];\n    function getPath() {\n        return floodingImages[currentImage];\n    }\n\n\n    map.addSource('floodOverlay', {\n        type: 'image',\n        url: getPath(),\n        coordinates: [\n            [-78.7746204947222, 35.8096093825],\n            [-78.6083031766667, 35.8096093825],\n            [-78.6083031766667, 35.6875072969444],\n            [-78.7746204947222, 35.6875072969444]    \n        ]\n     });\n\n    map.addLayer({\n        \"id\": \"floodOverlay\",\n        \"source\": \"floodOverlay\",\n        \"type\": \"raster\",\n        \"paint\": {\n            \"raster-opacity\": 0.85,\n            \"raster-fade-duration\": 0\n        }\n    });\n\n    // setInterval(function() {\n    //     currentImage = currentImage + 1;\n    //     if (currentImage == 10) {\n    //         currentImage = 0;\n    //     }\n    //     map.getSource(\"floodOverlay\").updateImage({ url: getPath() });\n    // }, 200);\n\n    \n        simwe.forEach(element => {\n            console.log(importedDischarge[element.title])\n            map.addSource(element.title, {\n                type: 'image',\n                url: importedDischarge[element.title],\n                coordinates: grassBbox(element.bounds)\n            });\n    \n            map.addLayer({\n                \"id\": element.title,\n                \"source\": element.title,\n                \"type\": \"raster\",\n                \"paint\": {\n                    \"raster-opacity\": 0.60,\n                    \"raster-fade-duration\": 2\n                }\n            });\n        });\n\n    function buildLevelList(data) {\n        if (data.features.length !== levels.length) {\n        // Iterate through the list of stores\n        for (i = 0; i < data.features.length; i++) {\n          var currentFeature = data.features[i];\n          // Shorten data.feature.properties to `prop` so we're not\n          // writing this long form over and over again.\n          var prop = currentFeature.properties;\n          // Select the listing container in the HTML and append a div\n          // with the class 'item' for each store\n          var listings = document.getElementById('listings');\n          var listing = listings.appendChild(document.createElement('div'));\n          listing.className = 'item';\n          listing.id = 'listing-' + i;\n      \n          // Create a new link with the class 'title' for each store\n          // and fill it with the store address\n          var link = listing.appendChild(document.createElement('a'));\n          link.href = '#';\n          link.className = 'level-title';\n          link.dataPosition = i;\n          link.innerHTML = prop.why_is_this_location_a_problem;\n\n           // Add an event listener for the links in the sidebar listing\n        link.addEventListener('click', function(e) {\n            // Update the currentFeature to the store associated with the clicked link\n            var clickedListing = data.features[this.dataPosition];\n            // 1. Fly to the point associated with the clicked link\n            flyToStore(clickedListing);\n            // 2. Close all other popups and display popup for clicked store\n            createPopUp(clickedListing);\n            // 3. Highlight listing in sidebar (and remove highlight for all other listings)\n            var activeItem = document.getElementsByClassName('active');\n            if (activeItem[0]) {\n            activeItem[0].classList.remove('active');\n            }\n            this.parentNode.classList.add('active');\n        });\n      \n          // Create a new div with the class 'details' for each store\n          // and fill it with the city and phone number\n          var details = listing.appendChild(document.createElement('div'));\n          details.innerHTML = prop.how_challenging_is_this_problem;\n          if (prop.phone) {\n            details.innerHTML += ' · ' + prop.phoneFormatted;\n          }\n        }\n    }\n      }\n      \n\n      let levels = fetch(`https://services1.arcgis.com/aT1T0pU1ZdpuDk1t/ArcGIS/rest/services/survey123_571499fe84ac4125abe48b793b9970a3_stakeholder/FeatureServer/0/query?f=json&returnGeometry=true&inSR=102100&outFields=*&outSR=4326&where=1=1`, {\n        cache: \"reload\"\n      })\n        .then(res=> res.json())\n        .then(json=> arcgisToGeoJSON(json))\n        .then(levels=> {\n            console.log(\"levels\",levels);\n            map.addSource('levels', {\n                \"type\": \"geojson\",\n                \"data\": levels\n                });\n                map.addLayer({\n                    \"id\": \"levels\",\n                    \"source\": \"levels\",\n                    \"type\": \"circle\",\n                    \"paint\": {\n                    \"circle-radius\": 10,\n                    \"circle-color\": \"#FFE100\",\n                    \"circle-opacity\": 0.8\n                    // 'fill-extrusion-color': '#FFE100',\n                    // use an 'interpolate' expression to add a smooth transition effect to the\n                    // buildings as the user zooms in\n                    // 'fill-extrusion-height': 100,\n                    // 'fill-extrusion-base': [\n                    //     \"interpolate\", [\"linear\"], [\"zoom\"],\n                    //     14, 0,\n                    //     14.05, 0\n                    // ],\n                    // 'fill-extrusion-opacity': 0.8\n                    }\n                    // \"type\": \"symbol\",\n                    // \"layout\": {\n                    //     \"icon-image\": \"star-15\",\n                    //     // \"text-field\": \"{title}\",\n                    //     \"text-font\": [\"Open Sans Semibold\", \"Arial Unicode MS Bold\"],\n                    //     \"text-offset\": [0, 0.6],\n                    //     \"text-anchor\": \"top\",\n                    //     \"icon-color\": \"#e00000\"\n                    //     }\n                });\n\n                map.addLayer({\n                    \"id\": \"earthquakes-heat\",\n                    \"type\": \"heatmap\",\n                    \"source\": \"levels\",\n                    \"maxzoom\": 9,\n                    \"paint\": {\n                    // Increase the heatmap weight based on frequency and property magnitude\n                    // \"heatmap-weight\": [\n                    // \"interpolate\",\n                    // [\"linear\"],\n                    // [\"get\", \"mag\"],\n                    // 0, 0,\n                    // 6, 1\n                    // ],\n                    // Increase the heatmap color weight weight by zoom level\n                    // heatmap-intensity is a multiplier on top of heatmap-weight\n                    \"heatmap-intensity\": [\n                    \"interpolate\",\n                    [\"linear\"],\n                    [\"zoom\"],\n                    0, 1,\n                    9, 3\n                    ],\n                    // Color ramp for heatmap.  Domain is 0 (low) to 1 (high).\n                    // Begin color ramp at 0-stop with a 0-transparancy color\n                    // to create a blur-like effect.\n                    \"heatmap-color\": [\n                    \"interpolate\",\n                    [\"linear\"],\n                    [\"heatmap-density\"],\n                    0, \"rgba(33,102,172,0)\",\n                    0.2, \"rgb(103,169,207)\",\n                    0.4, \"rgb(209,229,240)\",\n                    0.6, \"rgb(253,219,199)\",\n                    0.8, \"rgb(239,138,98)\",\n                    1, \"rgb(178,24,43)\"\n                    ],\n                    // Adjust the heatmap radius by zoom level\n                    \"heatmap-radius\": [\n                    \"interpolate\",\n                    [\"linear\"],\n                    [\"zoom\"],\n                    0, 2,\n                    9, 20\n                    ],\n                    // Transition from heatmap to circle layer by zoom level\n                    \"heatmap-opacity\": [\n                    \"interpolate\",\n                    [\"linear\"],\n                    [\"zoom\"],\n                    7, 1,\n                    9, 0\n                    ],\n                    }\n                    });\n                buildLevelList(levels);\n                        // Add an event listener for when a user clicks on the map\n                map.on('click', function(e) {\n                    // Query all the rendered points in the view\n                    var selectedFeatureIndex;\n                    var features = map.queryRenderedFeatures(e.point, { layers: ['levels'] });\n                    if (features.length) {\n                    var clickedPoint = features[0];\n                    // 1. Fly to the point\n                    flyToStore(clickedPoint);\n                    // 2. Close all other popups and display popup for clicked store\n                    createPopUp(clickedPoint);\n                    // 3. Highlight listing in sidebar (and remove highlight for all other listings)\n                    var activeItem = document.getElementsByClassName('active');\n                    if (activeItem[0]) {\n                        activeItem[0].classList.remove('active');\n                    }\n                    // Find the index of the store.features that corresponds to the clickedPoint that fired the event listener\n                    var selectedFeature = clickedPoint.properties.ObjectId;\n                    \n                    for (var i = 0; i < levels.features.length; i++) {\n                        if (levels.features[i].properties.ObjectId === selectedFeature) {\n                        selectedFeatureIndex = i;\n                        }\n                    }\n                    // Select the correct list item using the found index and add the active class\n                    var listing = document.getElementById('listing-' + selectedFeatureIndex);\n                    listing.classList.add('active');\n                    }\n                });\n            return levels;\n        });\n\n       \n\n\n  \n        if (! map.getSource('composite')) {map.addSource('composite', { type: 'vector', url: 'mapbox://mapbox.mapbox-streets-v7'});}\n\n    const layers = map.getStyle().layers;\n \n    let labelLayerId;\n    for (var i = 0; i < layers.length; i++) {\n        if (layers[i].type === 'symbol' && layers[i].layout['text-field']) {\n        labelLayerId = layers[i].id;\n        break;\n        }\n    }\n    map.addLayer({\n        'id': '3d-buildings',\n        'source': 'composite',\n        'source-layer': 'building',\n        'filter': ['==', 'extrude', 'true'],\n        'type': 'fill-extrusion',\n        'minzoom': 14,\n        'paint': {\n            'fill-extrusion-color': '#aaa',\n            // use an 'interpolate' expression to add a smooth transition effect to the\n            // buildings as the user zooms in\n            'fill-extrusion-height': [\n                \"interpolate\", [\"linear\"], [\"zoom\"],\n                14, 0,\n                14.05, [\"get\", \"height\"]\n            ],\n            'fill-extrusion-base': [\n                \"interpolate\", [\"linear\"], [\"zoom\"],\n                14, 0,\n                14.05, [\"get\", \"min_height\"]\n            ],\n            'fill-extrusion-opacity': 1\n            }\n        }, labelLayerId);\n\n        \n\n\n       // Add the data to your map as a layer\n \n   \n\n    \n  \n\n});\n"]}